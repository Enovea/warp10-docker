name: Build WarpÂ 10 docker image

on:
  push:
    branches:
      - master
  release:
    types:
      - created

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set env
        run: |
          if [[ ${GITHUB_REF} == refs/tags/* ]]; then
            echo "::set-env name=TAG::${GITHUB_REF#refs/tags/}"
          elif
            echo "::set-env name=TAG::default"
          fi

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build the test image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          tags: ${{ secrets.DOCKER_USERNAME }}/warp10:${TAG}-test

      - name: Test the new image
        run: |
          echo "Run docker image"
          docker run --name testing-${TAG} -d -p 8080:8080 -p 8081:8081 ${{ secrets.DOCKER_USERNAME }}/warp10:${TAG}-test
          sleep 10

          echo "Get tokens"
          READ_TOKEN=$(docker exec -i $(docker ps -q --filter "name=testing-${TAG}") tail -n 1 /opt/warp10/etc/initial.tokens | sed -e 's/{"read":{"token":"//' -e 's/".*//')
          WRITE_TOKEN=$(docker exec -i $(docker ps -q --filter "name=testing-${TAG}") tail -n 1 /opt/warp10/etc/initial.tokens | sed -e 's/.*,"write":{"token":"//' -e 's/".*//')

          echo "Write data"
          curl -s -H "X-Warp10-Token: ${WRITE_TOKEN}" http://127.0.0.1:8080/api/v0/update --data-binary '// test{} 42'

          echo "Read data"
          res=$(curl -s "http://127.0.0.1:8080/api/v0/fetch?token=${READ_TOKEN}&selector=~.*\{\}&now=now&timespan=-1" | cut -d ' ' -f3)
          echo ${res}
          if [[ "${res}" != "42" ]]; then
            echo "Failed to compare write data with read data"
            exit 1
          fi

          echo "Test WarpStudio"
          res=$(curl -Is http://127.0.0.1:8081/ | head -1)
          if [[ "${res%?}" != "HTTP/1.1 200 OK" ]]; then
            echo "Failed to test WarpStudio URL"
            echo "Curl result: ${res}"
            echo $(docker ps -a)
            exit 1
          fi

      - name: Build the main image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: startsWith(github.ref, 'refs/tags/')
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/warp10:latest
            ${{ secrets.DOCKER_USERNAME }}/warp10:${TAG}

      - name: Build the ci image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./predictible-tokens-for-ci/Dockerfile
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: startsWith(github.ref, 'refs/tags/')
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/warp10:${TAG}-ci


      - name: Send Notification
        uses: bayssmekanique/action-simple-slack-notifier@v1
        if: always()
        with:
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          status: ${{ job.status }}
          channel: '#app-alerts'
          version: ${{ steps.check.outputs.version }}
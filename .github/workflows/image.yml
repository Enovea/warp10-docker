name: Build WarpÂ 10 docker image

on:
  push:
    branches:
      - master
  release:
    types:
      - created

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2.0.2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

      - name: Checkout code
        uses: actions/checkout@master
        with:
          fetch-depth: 0 # Fetch all branches and tags so we can find the latest tag

      - name: Get latest tag
        run: echo "::set-env name=TAG::$(git describe --abbrev=0 --tags)"

      - name: Is new tag
        if: startsWith(github.ref, 'refs/tags/')
        run: echo "::set-env name=PUSH::--push"

      - name: Set up Docker Buildx for multiarch build
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          buildx-version: latest
          qemu-version: latest

      - name: Login to docker hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build the main image
        run: |
          docker buildx build \
            ${PUSH} \
            --tag ${{ secrets.DOCKER_USERNAME }}/warp10:latest \
            --tag ${{ secrets.DOCKER_USERNAME }}/warp10:${TAG} \
            --platform linux/amd64,linux/arm/v7,linux/arm64 .

      - name: Build the ci image
        run: |
          docker buildx build \
            ${PUSH} \
            --tag ${{ secrets.DOCKER_USERNAME }}/warp10:${TAG}-ci \
            --platform linux/amd64,linux/arm/v7,linux/arm64 predictible-tokens-for-ci

      # - name: Notify success
      #   if: success()
      #   env:
      #     SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      #   uses: voxmedia/github-action-slack-notify-build@v1
      #   with:
      #     channel: github-alerts
      #     status: SUCCESS
      #     color: good